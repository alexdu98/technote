-- MySQL Script generated by MySQL Workbench
-- 04/16/16 20:06:05
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema technote
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema technote
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `technote` DEFAULT CHARACTER SET latin1 ;
-- -----------------------------------------------------
-- Schema test
-- -----------------------------------------------------
USE `technote` ;

-- -----------------------------------------------------
-- Table `technote`.`groupe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`groupe` (
  `id_groupe` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `libelle` VARCHAR(31) NOT NULL,
  `id_groupe_parent` INT UNSIGNED NULL,
  PRIMARY KEY (`id_groupe`),
  UNIQUE INDEX `libelle_UNIQUE` (`libelle` ASC),
  INDEX `FK_GROUPE_ID_GROUPE_idx` (`id_groupe_parent` ASC),
  CONSTRAINT `FK_GROUPE_ID_GROUPE`
  FOREIGN KEY (`id_groupe_parent`)
  REFERENCES `technote`.`groupe` (`id_groupe`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `technote`.`membre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`membre` (
  `id_membre` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `pseudo` VARCHAR(31) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(127) NOT NULL,
  `date_inscription` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `date_connexion` DATETIME NULL,
  `id_groupe` INT UNSIGNED NOT NULL,
  `cle_reset_pass` VARCHAR(127) NULL,
  `bloquer` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id_membre`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `pseudo_UNIQUE` (`pseudo` ASC),
  INDEX `FK_GROUPE_MEMBRE_idx` (`id_groupe` ASC),
  CONSTRAINT `FK_ID_GROUPE_MEMBRE`
  FOREIGN KEY (`id_groupe`)
  REFERENCES `technote`.`groupe` (`id_groupe`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`token` (
  `id_token` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `cle` VARCHAR(255) NOT NULL,
  `id_membre` INT UNSIGNED NOT NULL,
  `date_expiration` DATETIME NOT NULL,
  `ip` VARCHAR(15) NOT NULL,
  `actif` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id_token`),
  INDEX `FK_ID_MEMBRE_idx` (`id_membre` ASC),
  CONSTRAINT `FK_ID_MEMBRE_TOKEN`
  FOREIGN KEY (`id_membre`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`technote`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`technote` (
  `id_technote` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `titre` VARCHAR(63) NOT NULL,
  `date_creation` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `contenu` MEDIUMTEXT NULL,
  `id_auteur` INT UNSIGNED NOT NULL,
  `url_image` VARCHAR(1023) NOT NULL,
  `date_modification` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `id_modificateur` INT UNSIGNED NULL,
  `description` VARCHAR(383) NOT NULL,
  `visible` TINYINT(1) NOT NULL,
  `publie` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id_technote`),
  INDEX `FK_ID_MEMBRE_idx` (`id_auteur` ASC),
  INDEX `FK_ID_MODIFICATEUR_TECHNOTE_idx` (`id_modificateur` ASC),
  CONSTRAINT `FK_ID_MEMBRE_TECHNOTE`
  FOREIGN KEY (`id_auteur`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_MODIFICATEUR_TECHNOTE`
  FOREIGN KEY (`id_modificateur`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`mot_cle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`mot_cle` (
  `id_mot_cle` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `label` VARCHAR(31) NOT NULL,
  PRIMARY KEY (`id_mot_cle`))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`decrire`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`decrire` (
  `id_technote` INT UNSIGNED NOT NULL,
  `id_mot_cle` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_technote`, `id_mot_cle`),
  INDEX `FK_ID_MOT_CLE_idx` (`id_mot_cle` ASC),
  CONSTRAINT `FK_ID_TECHNOTE_DECRIRE`
  FOREIGN KEY (`id_technote`)
  REFERENCES `technote`.`technote` (`id_technote`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_MOT_CLE_DECRIRE`
  FOREIGN KEY (`id_mot_cle`)
  REFERENCES `technote`.`mot_cle` (`id_mot_cle`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`commentaire`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`commentaire` (
  `id_commentaire` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `commentaire` VARCHAR(2047) NOT NULL,
  `id_auteur` INT UNSIGNED NOT NULL,
  `date_creation` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `id_technote` INT UNSIGNED NOT NULL,
  `id_commentaire_parent` INT UNSIGNED NULL,
  `date_modification` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `id_modificateur` INT UNSIGNED NULL,
  `visible` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id_commentaire`),
  INDEX `FK_ID_MEMBRE_idx` (`id_auteur` ASC),
  INDEX `FK_ID_TECHNOTE_idx` (`id_technote` ASC),
  INDEX `FK_ID_COMMENTAIRE_PARENT_idx` (`id_commentaire_parent` ASC),
  INDEX `FK_ID_MODIFICATEUR_COMMENTAIRE_idx` (`id_modificateur` ASC),
  CONSTRAINT `FK_ID_MEMBRE_COMMENTAIRE`
  FOREIGN KEY (`id_auteur`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_TECHNOTE_COMMENTAIRE`
  FOREIGN KEY (`id_technote`)
  REFERENCES `technote`.`technote` (`id_technote`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_COMMENTAIRE_PARENT_COMMENTAIRE`
  FOREIGN KEY (`id_commentaire_parent`)
  REFERENCES `technote`.`commentaire` (`id_commentaire`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_MODIFICATEUR_COMMENTAIRE`
  FOREIGN KEY (`id_modificateur`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`question` (
  `id_question` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `question` MEDIUMTEXT NOT NULL,
  `date_question` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `id_auteur` INT UNSIGNED NOT NULL,
  `resolu` TINYINT(1) NOT NULL,
  `date_modification` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `id_modificateur` INT UNSIGNED NULL,
  `visible` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id_question`),
  INDEX `FK_ID_MODIFICATEUR_QUESTION_idx` (`id_modificateur` ASC),
  INDEX `FK_ID_AUTEUR_MEMBRE_idx` (`id_auteur` ASC),
  CONSTRAINT `FK_ID_MODIFICATEUR_QUESTION`
  FOREIGN KEY (`id_modificateur`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_AUTEUR_QUESTION`
  FOREIGN KEY (`id_auteur`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`clarifier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`clarifier` (
  `id_mot_cle` INT UNSIGNED NOT NULL,
  `id_question` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_mot_cle`, `id_question`),
  INDEX `FK_ID_QUESTION_idx` (`id_question` ASC),
  CONSTRAINT `FK_ID_MOT_CLE_CLARIFIER`
  FOREIGN KEY (`id_mot_cle`)
  REFERENCES `technote`.`mot_cle` (`id_mot_cle`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_QUESTION_CLARIFIER`
  FOREIGN KEY (`id_question`)
  REFERENCES `technote`.`question` (`id_question`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`reponse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`reponse` (
  `id_reponse` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `reponse` MEDIUMTEXT NOT NULL,
  `date_reponse` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `id_question` INT UNSIGNED NOT NULL,
  `id_reponse_parent` INT UNSIGNED NULL,
  `id_auteur` INT UNSIGNED NOT NULL,
  `date_modification` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `id_modificateur` INT UNSIGNED NULL,
  `visible` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id_reponse`),
  INDEX `FK_ID_QUESTION_idx` (`id_question` ASC),
  INDEX `FK_ID_REPONSE_PARENT_idx` (`id_reponse_parent` ASC),
  INDEX `FK_ID_MODIFICATEUR_REPONSE_idx` (`id_modificateur` ASC),
  INDEX `FK_ID_AUTEUR_MEMBRE_idx` (`id_auteur` ASC),
  CONSTRAINT `FK_ID_QUESTION_REPONSE`
  FOREIGN KEY (`id_question`)
  REFERENCES `technote`.`question` (`id_question`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_REPONSE_PARENT_REPONSE`
  FOREIGN KEY (`id_reponse_parent`)
  REFERENCES `technote`.`reponse` (`id_reponse`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_MODIFICATEUR_REPONSE`
  FOREIGN KEY (`id_modificateur`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_AUTEUR_REPONSE`
  FOREIGN KEY (`id_auteur`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`visite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`visite` (
  `id_visite` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ip` VARCHAR(15) NOT NULL,
  `date_visite` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_visite`))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`action`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`action` (
  `id_action` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `libelle` VARCHAR(255) NOT NULL,
  `date_action` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `id_membre` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_action`),
  INDEX `FK_IDMEMBRE_ACTION_idx` (`id_membre` ASC),
  CONSTRAINT `FK_MEMBRE_ACTION`
  FOREIGN KEY (`id_membre`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`droit_groupe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`droit_groupe` (
  `type` ENUM('get', 'add', 'edit', 'drop') NOT NULL,
  `cible` VARCHAR(31) NOT NULL,
  `id_groupe` INT UNSIGNED NOT NULL,
  `autoriser` TINYINT(1) NOT NULL,
  PRIMARY KEY (`type`, `cible`, `id_groupe`),
  INDEX `FK_DROIT_GROUPE_ID_GROUPE_idx` (`id_groupe` ASC),
  CONSTRAINT `FK_DROIT_GROUPE_ID_GROUPE`
  FOREIGN KEY (`id_groupe`)
  REFERENCES `technote`.`groupe` (`id_groupe`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technote`.`droit_membre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technote`.`droit_membre` (
  `type` ENUM('get', 'add', 'edit', 'drop') NOT NULL,
  `cible` VARCHAR(31) NOT NULL,
  `id_membre` INT UNSIGNED NOT NULL,
  `autoriser` TINYINT(1) NOT NULL,
  PRIMARY KEY (`type`, `cible`, `id_membre`),
  INDEX `FK_DROIT_MEMBRE_ID_MEMBRE_idx` (`id_membre` ASC),
  CONSTRAINT `FK_DROIT_MEMBRE_ID_MEMBRE`
  FOREIGN KEY (`id_membre`)
  REFERENCES `technote`.`membre` (`id_membre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
